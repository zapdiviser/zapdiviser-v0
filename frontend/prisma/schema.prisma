generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String    @id @default(cuid())
  providerType       String
  providerId         String
  providerAccountId  String
  refreshToken       String?
  accessToken        String?
  accessTokenExpires DateTime?
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([providerId, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  expires      DateTime
  sessionToken String   @unique
  accessToken  String   @unique
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId String
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts Account[]
  sessions Session[]
  funils Funil[]
  redirects Redirect[]
}

model VerificationRequest {
  id         String   @id @default(cuid())
  identifier String
  token      String   @unique
  expires    DateTime
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([identifier, token])
}

model Redirect {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  name      String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  urls RedirectUrl[]
}

model RedirectUrl {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  url        String
  redirectId String
  redirect   Redirect @relation(fields: [redirectId], references: [id])
}

model Instance {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  name      String

  funils Funil_Instance[]
}

model Funil {
  id         String   @id @default(cuid())
  createdAt  DateTime @default(now())
  name       String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  instances Funil_Instance[]
  flows Flow[]
}

model Funil_Instance {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())

  funil   Funil  @relation(fields: [funilId], references: [id])
  funilId String

  instance   Instance @relation(fields: [instanceId], references: [id])
  instanceId String
}

model Flow {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  name      String
  flow      Json

  funil   Funil  @relation(fields: [funilId], references: [id])
  funilId String
}
